// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using golablint.Data;

namespace golablint.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("golablint.Models.Borrowing", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("endDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("equipmentid")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("startDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("userid")
                        .HasColumnType("uuid");

                    b.HasKey("id");

                    b.HasIndex("equipmentid");

                    b.HasIndex("userid");

                    b.ToTable("Borrowing");
                });

            modelBuilder.Entity("golablint.Models.Equipment", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("amount")
                        .HasColumnType("integer");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<byte[]>("image")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Equipment");
                });

            modelBuilder.Entity("golablint.Models.User", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            id = new Guid("2315cefe-d411-4bda-aa61-cba2ad15ccc5"),
                            email = "admin@kmitl.ac.th",
                            name = "admin",
                            password = "$2a$11$sXQ/bAumkRok2aLKobk42uOIawhfmUpmt89OrBO7xzO5ULJ7zYMBu",
                            role = "Admin",
                            surname = "golablint"
                        });
                });

            modelBuilder.Entity("golablint.Models.Borrowing", b =>
                {
                    b.HasOne("golablint.Models.Equipment", "equipment")
                        .WithMany()
                        .HasForeignKey("equipmentid");

                    b.HasOne("golablint.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("userid");

                    b.Navigation("equipment");

                    b.Navigation("user");
                });
#pragma warning restore 612, 618
        }
    }
}
